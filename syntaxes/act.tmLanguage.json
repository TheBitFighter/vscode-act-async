{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "ACT",
    "patterns": [
        { "include": "#singleLineComment" },
        { "include": "#multiLineComment" },
        { "include": "#importDirective" },
        { "include": "#openDirective" },
        { "include": "#namespaceDefinition" },
        { "include": "#exportDirective" }
    ],
    "repository": {
        "importDirective": {
            "comment": "import directive to import other act files",
            "name": "meta.import.act",
            "match": "(\\bimport\\b)\\s*((\"[\\w\\.\/]*\"?)|((\\b\\w+((::?)\\w*)*)?\\s*(((->?)|(=>?))\\s*(\\b\\w+\\b)?)?))\\s*(;)?",
            "captures": {
                "1": { "name": "keyword.control.import.act" },
                "3": { "name": "string.quoted.double.include.act" },
                "5": { "name": "entity.name.namespace.act" },
                "10": { "name": "keyword.operator.namespace-open.act" },
                "10": { "name": "keyword.operator.namespace-map.act" },
                "12": { "name": "entity.name.namespace.alias.act" },
                "13": { "name": "punctuation.terminator.statement.act"}
            }
        },
        "openDirective": {
            "comment": "open directive in act for namespace renaming",
            "name": "meta.open.act",
            "match": "(\\bopen\\b)\\s*(\\b\\w+((::?)\\w*)*)?\\s*((->?)\\s*(\\w+)?)?\\s*(;)?",
            "captures": {
                "1": { "name": "keyword.control.open.act" },
                "2": { "name": "entity.name.namespace.act" },
                "6": { "name": "keyword.operator.namespace-open.act" },
                "7": { "name": "entity.name.namespace.alias.act" },
                "8": { "name": "punctuation.terminator.statement.act"}
            }
        },
        "singleLineComment": {
            "comment": "Single line comment using two slashes",
            "name": "comment.line.double-slash.act",
            "match": "\/\/(.)*"
        },
        "multiLineComment": {
            "comment": "Multi line comment in ACT",
            "name": "comment.block.act",
            "begin": "(\/\\*)",
            "end": "(\\*\/)",
            "beginCaptures": {
                "1": { "name": "punctuation.definition.comment.begin.act" }
            },
            "endCaptures": {
                "1": { "name": "punctuation.definition.comment.end.act" }
            }
        },
        "namespaceDefinition": {
            "comment": "Definition of a namespace in ACT",
            "name": "meta.block.namespace.act",
            "begin": "(\\bnamespace\\b)",
            "end": "(?:(?<=\\})|(?=;))",
            "beginCaptures": {
                "0": { "name": "meta.head.namespace.act" },
                "1": { "name": "keyword.other.namespace.definition.act storage.type.namespace.definition.act" }
            },
            "endCaptures" : {},
            "patterns": [
                {
                    "begin": "\\G",
                    "end": "(\\{)|(;)",
                    "beginCaptures": {},
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.section.block.begin.bracket.curly.namespace.act"
                        }
                    },
                    "name": "meta.head.namespace.act",
                    "patterns": [
                        {
                            "match": "(\\b[a-zA-Z_][a-zA-Z0-9_]*\\b)",
                            "name": "entity.name.namespace.act"
                        }
                    ]
                },
                {
                    "begin": "(?<=\\{)",
                    "end": "\\}",
                    "beginCaptures": {},
                    "endCaptures": {
                        "0": { "name": "punctuation.section.block.end.bracket.curly.namespace.act" }
                    },
                    "name": "meta.body.namespace.act",
                    "patterns": [
                        { "include": "$self" }
                    ]
                }
            ]
        },
        "exportDirective": {
            "comment": "export for namespaces and functions",
            "name": "keyword.other.export.act",
            "match": "\\bexport\\b"
        }
    },
    "scopeName": "source.act"
}